


#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace KMUH.iKASAWebApi.DomainModel.Entities
{

	// TODO: Add your properties, methods and validation rules here
	public partial class 移課程暫存 : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class 抓MAIL暫存 : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class 住院醫師暫存 : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class 西醫受訓人員名單 : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class VOTEUSERDEFINELIST : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class VOTETEMPDATUM : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class VOTETARGET : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class VOTEMAIN : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class VOTEJOB : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class VOTEINSTANCE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class VOTEINSDET : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class VOTEGROUP : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class VOTEGCOND : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class TRAININGTIME : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class TEST : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class TEACHTIMETYPE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class TEACHTIMERATE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class TEACHTIMEKPIREFTEMP : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class TEACHTIMEKPIREF : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class TEACHPOINTREF : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class TEACHPOINTJOBITEM : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class TEACHPOINTITEMREQUIRE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class TEACHPOINTITEM : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class TEACHPOINTEMPITEMDATUM : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class TEACHPOINTCALCTYPEREF : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class TEACHPOINTCALCTYPE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class SCORESETTINGSCORETYPE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class SCORESETTINGJOB : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class SCORESETTINGDETAIL : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class SCORESETTING : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class SCOREINSTANCEDETAIL : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class SCOREINSTANCE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class SCHEDULERLOG : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class R分級資料 : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class REPORTDATATEMP : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class RECORDTEMPLATE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class RECORDINSVIEWER : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class RECORDINSTANCEREJECTLOG : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class RECORDINSTANCE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class RECORDINSSIGNIN : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class RECORDINSREADER : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class RECORDINSDET : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class RECORDEDUACTREF : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class PSNOPD : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class PASSPORTSTUDENTAPPLICATIONITEMFAILLOG : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class PASSPORTSTUDENTAPPLICATIONITEM_BK2 : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class PASSPORTSTUDENTAPPLICATIONITEM_BK : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class PASSPORTSTUDENTAPPLICATIONITEM : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class PASSPORTSPECIALLIST : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class PASSPORTJOBTITLEITEM_BK : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class PASSPORTJOBTITLEITEM : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class PASSPORTJOBFINALMAN : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class PASSPORTDOCGRADE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class PASSPORTCHECKITEM : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class OSCECERT : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class OSCEBLOCKTIME : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class NURSELIST : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class NNOTEITEM : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class NNOTE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class NEWSVIEWTARGET : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class NEWS_ATTACHMENT : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class NEWS : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class MYLISTDET : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class MYLIST : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class MONTHLYTEACHPOINTCALCDATUM : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class MESSAGEBOARD : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class MEMBER_BK : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class MEMBER : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class MEDICALVOTELIST : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class MEDICALTEACHPOINT : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class LOGINLOG : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class JOBFORMSETTING : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class IMPORTTEMP : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class IKASA_UPLOADFILE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class IKASA_OSCEEXAMSTAGE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class IKASA_OSCEEXAMSCORE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class IKASA_OSCEEXAM : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class IKASA_MENUREF : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class IKASA_MENUPARAM : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class IKASA_MENU : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class IKASA_IPDDATACOUNT : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class IKASA_ERCASE_EVALDET : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class IKASA_ERCASE_EVAL : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class IKASA_ERCASE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class IKASA_ACTUPLOADFILE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class HEALTEACHTIMERATE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class HEALTEACHTIME : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class GOODVSDATADE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class GOODVSDATUM : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORMCATEGORYREF : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORMCATEGORY : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_TODO_LIST : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_TEMPLATES_BK : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_TEMPLATE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_TEMPLATE_SUBMIT_SQL : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_TEMPLATE_SQL : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_TEMPLATE_SINGLE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_TEMPLATE_SCRIPT : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_TEMPLATE_PERMISSION : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_TEMPLATE_NECESSARY : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_TEMPLATE_LIBRARY_OPTION : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_TEMPLATE_LIBRARY : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_TEMPLATE_IMAGE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_TEMPLATE_GROUPS_BK : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_TEMPLATE_GROUP : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_TEMPLATE_EXPRESSION : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_TEMPLATE_ELEMENTS_BK : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_TEMPLATE_ELEMENT : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_TEMPLATE_ELEMENT_READONLY : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_TEMPLATE_DYNAMIC_ELEMENT : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_OPTION_TYPE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_INSTANCES_DELLOG : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_INSTANCES_BK : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_INSTANCE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_INSTANCE_TRANSLOG : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_INSTANCE_TARGETS_DELLOG : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_INSTANCE_TARGETS_BK : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_INSTANCE_TARGET : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_INSTANCE_RETURN_LOG : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_INSTANCE_EXPRESSIONS_BK : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_INSTANCE_EXPRESSION : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_INSTANCE_ELEMENTS_BK : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_INSTANCE_ELEMENT : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_INSTANCE_BLOCK : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FORM_INSTANCE_ATTACHMENT : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class FIXMEMBERDATUM : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class ELEARNINGITEM : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class ELEARNINGEMPITEMLOG : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class ELEARNINGEMPITEM : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class ELEARNINGCLASS : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class ELEARNINGBOOKING : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUTERMFORMREQTEMPLATEDET : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUTERMFORMREQTEMPLATE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUTERMFORMREQ : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUTERMFORMINSTANCE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUTERM : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUTEAMRUNDOWN : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUTEAMMEMBERRUNDOWN_TRANSLOG : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUTEAMMEMBERRUNDOWN : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUTEAMMEMBER : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUTEAM : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUTEACHERTYPE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUSTOPACTSCHEDULE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUSTOPACTATTACHMENT : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUSTOP : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUSETTING : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUSENTENCE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUSCORE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUREFTEACHER : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUQUESTION : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUPASSPORTTEMPLATETARGET : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUPASSPORTTEMPLATEITEM : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUPASSPORTTEMPLATE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUPASSPORTPREF : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUPASSPORTITEMTARGET : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUPASSPORTITEMDET : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUPASSPORTITEM : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUPASSPORTINSTANCE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUPASSPORTINSITEMREJECTHI : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUPASSPORTINSITEMREF : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUPASSPORTINSITEMDET : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUPASSPORTINSITEM : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUNOTETEMPLATE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUNOTELIST : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUNOTEITEM : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUNOTE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUNOTALERTSETTING : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUMENU : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUFORMTEMPLATETARGET : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUFORMTEMPLATELIST : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUFORMSTASTICPERMISSION : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUACTVIEWTARGET : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUACTTYPEROLEREF : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUACTTYPEREF : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUACTTYPEGROUPING : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUACTTYPE_BK : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUACTTYPE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUACTTOPIC : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUACTTARGET : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class EDUACTBOOKING : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class DOCTORPOINTTYPE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class DOCTORPOINTCALTYPE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class DOCTORPOINT : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class DEPSECTEMP : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class DEPSECDATUM : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class CLERKIPDNOTEDATUM : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class CICBOOK : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class AUTOEDUFORMTEMPLATETARGET : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class AUTOEDUFORMTEMPLATESIGNER : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class AUTOEDUFORMTEMPLATELIST : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class AUTOEDUFORMTEMPLATEEXCEPT : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class AUTHROLE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class AUTHMENU : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class ACTTYPETREE_TEMP : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class ACCOUNT : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class ACCOUNTROLEIMPORT : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }



	// TODO: Add your properties, methods and validation rules here
	public partial class ACCOUNTROLE : Entity, IValidatableObject
    {
        #region Properties

        #endregion Properties

        #region Methods

        #endregion Methods

        #region IValidatableObject Members

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var validationResults = new List<ValidationResult>();

			/*
            if (Discount < 0 || Discount > 1)
                validationResults.Add(new ValidationResult(Messages.validation_OrderLineDiscountCannotBeLessThanZeroOrGreaterThanOne,
                                                            new string[] { "Discount" }));
			*/
            return validationResults;
        }

        #endregion

        #region IDataErrorInfo Members

		/*
        partial void ValidateProperty(string propertyName, ref string error)
        {
            var validationResults = this.Validate(new ValidationContext(this, null, null));
            CombineErrorMessage(validationResults, propertyName, ref error);
        }
		*/

        #endregion
    }


}
#pragma warning restore 1591

