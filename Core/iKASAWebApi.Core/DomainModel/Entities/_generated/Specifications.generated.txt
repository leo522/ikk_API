


#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Linq.Expressions;
using AppFramework.Specifications;
using KMUH.iKASAWebApi.DomainModel.Entities;

namespace KMUH.iKASAWebApi.DomainModel.Specifications
{

	public static partial class 移課程暫存Specifications
    {
		public static Expression<Func<移課程暫存, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<移課程暫存>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<移課程暫存>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<移課程暫存>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<移課程暫存>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<移課程暫存>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<移課程暫存>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class 抓MAIL暫存Specifications
    {
		public static Expression<Func<抓MAIL暫存, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<抓MAIL暫存>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<抓MAIL暫存>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<抓MAIL暫存>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<抓MAIL暫存>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<抓MAIL暫存>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<抓MAIL暫存>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class 住院醫師暫存Specifications
    {
		public static Expression<Func<住院醫師暫存, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<住院醫師暫存>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<住院醫師暫存>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<住院醫師暫存>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<住院醫師暫存>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<住院醫師暫存>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<住院醫師暫存>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class 西醫受訓人員名單Specifications
    {
		public static Expression<Func<西醫受訓人員名單, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<西醫受訓人員名單>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<西醫受訓人員名單>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<西醫受訓人員名單>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<西醫受訓人員名單>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<西醫受訓人員名單>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<西醫受訓人員名單>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class VOTEUSERDEFINELISTSpecifications
    {
		public static Expression<Func<VOTEUSERDEFINELIST, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<VOTEUSERDEFINELIST>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<VOTEUSERDEFINELIST>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<VOTEUSERDEFINELIST>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<VOTEUSERDEFINELIST>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<VOTEUSERDEFINELIST>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<VOTEUSERDEFINELIST>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class VOTETEMPDATUMSpecifications
    {
		public static Expression<Func<VOTETEMPDATUM, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<VOTETEMPDATUM>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<VOTETEMPDATUM>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<VOTETEMPDATUM>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<VOTETEMPDATUM>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<VOTETEMPDATUM>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<VOTETEMPDATUM>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class VOTETARGETSpecifications
    {
		public static Expression<Func<VOTETARGET, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<VOTETARGET>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<VOTETARGET>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<VOTETARGET>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<VOTETARGET>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<VOTETARGET>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<VOTETARGET>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class VOTEMAINSpecifications
    {
		public static Expression<Func<VOTEMAIN, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<VOTEMAIN>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<VOTEMAIN>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<VOTEMAIN>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<VOTEMAIN>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<VOTEMAIN>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<VOTEMAIN>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class VOTEJOBSpecifications
    {
		public static Expression<Func<VOTEJOB, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<VOTEJOB>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<VOTEJOB>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<VOTEJOB>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<VOTEJOB>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<VOTEJOB>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<VOTEJOB>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class VOTEINSTANCESpecifications
    {
		public static Expression<Func<VOTEINSTANCE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<VOTEINSTANCE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<VOTEINSTANCE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<VOTEINSTANCE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<VOTEINSTANCE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<VOTEINSTANCE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<VOTEINSTANCE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class VOTEINSDETSpecifications
    {
		public static Expression<Func<VOTEINSDET, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<VOTEINSDET>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<VOTEINSDET>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<VOTEINSDET>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<VOTEINSDET>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<VOTEINSDET>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<VOTEINSDET>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class VOTEGROUPSpecifications
    {
		public static Expression<Func<VOTEGROUP, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<VOTEGROUP>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<VOTEGROUP>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<VOTEGROUP>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<VOTEGROUP>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<VOTEGROUP>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<VOTEGROUP>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class VOTEGCONDSpecifications
    {
		public static Expression<Func<VOTEGCOND, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<VOTEGCOND>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<VOTEGCOND>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<VOTEGCOND>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<VOTEGCOND>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<VOTEGCOND>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<VOTEGCOND>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class TRAININGTIMESpecifications
    {
		public static Expression<Func<TRAININGTIME, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<TRAININGTIME>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<TRAININGTIME>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<TRAININGTIME>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<TRAININGTIME>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<TRAININGTIME>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<TRAININGTIME>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class TESTSpecifications
    {
		public static Expression<Func<TEST, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<TEST>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<TEST>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<TEST>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<TEST>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<TEST>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<TEST>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class TEACHTIMETYPESpecifications
    {
		public static Expression<Func<TEACHTIMETYPE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<TEACHTIMETYPE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<TEACHTIMETYPE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<TEACHTIMETYPE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<TEACHTIMETYPE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<TEACHTIMETYPE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<TEACHTIMETYPE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class TEACHTIMERATESpecifications
    {
		public static Expression<Func<TEACHTIMERATE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<TEACHTIMERATE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<TEACHTIMERATE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<TEACHTIMERATE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<TEACHTIMERATE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<TEACHTIMERATE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<TEACHTIMERATE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class TEACHTIMEKPIREFTEMPSpecifications
    {
		public static Expression<Func<TEACHTIMEKPIREFTEMP, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<TEACHTIMEKPIREFTEMP>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<TEACHTIMEKPIREFTEMP>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<TEACHTIMEKPIREFTEMP>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<TEACHTIMEKPIREFTEMP>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<TEACHTIMEKPIREFTEMP>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<TEACHTIMEKPIREFTEMP>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class TEACHTIMEKPIREFSpecifications
    {
		public static Expression<Func<TEACHTIMEKPIREF, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<TEACHTIMEKPIREF>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<TEACHTIMEKPIREF>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<TEACHTIMEKPIREF>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<TEACHTIMEKPIREF>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<TEACHTIMEKPIREF>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<TEACHTIMEKPIREF>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class TEACHPOINTREFSpecifications
    {
		public static Expression<Func<TEACHPOINTREF, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<TEACHPOINTREF>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<TEACHPOINTREF>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<TEACHPOINTREF>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<TEACHPOINTREF>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<TEACHPOINTREF>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<TEACHPOINTREF>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class TEACHPOINTJOBITEMSpecifications
    {
		public static Expression<Func<TEACHPOINTJOBITEM, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<TEACHPOINTJOBITEM>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<TEACHPOINTJOBITEM>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<TEACHPOINTJOBITEM>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<TEACHPOINTJOBITEM>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<TEACHPOINTJOBITEM>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<TEACHPOINTJOBITEM>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class TEACHPOINTITEMREQUIRESpecifications
    {
		public static Expression<Func<TEACHPOINTITEMREQUIRE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<TEACHPOINTITEMREQUIRE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<TEACHPOINTITEMREQUIRE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<TEACHPOINTITEMREQUIRE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<TEACHPOINTITEMREQUIRE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<TEACHPOINTITEMREQUIRE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<TEACHPOINTITEMREQUIRE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class TEACHPOINTITEMSpecifications
    {
		public static Expression<Func<TEACHPOINTITEM, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<TEACHPOINTITEM>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<TEACHPOINTITEM>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<TEACHPOINTITEM>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<TEACHPOINTITEM>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<TEACHPOINTITEM>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<TEACHPOINTITEM>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class TEACHPOINTEMPITEMDATUMSpecifications
    {
		public static Expression<Func<TEACHPOINTEMPITEMDATUM, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<TEACHPOINTEMPITEMDATUM>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<TEACHPOINTEMPITEMDATUM>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<TEACHPOINTEMPITEMDATUM>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<TEACHPOINTEMPITEMDATUM>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<TEACHPOINTEMPITEMDATUM>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<TEACHPOINTEMPITEMDATUM>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class TEACHPOINTCALCTYPEREFSpecifications
    {
		public static Expression<Func<TEACHPOINTCALCTYPEREF, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<TEACHPOINTCALCTYPEREF>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<TEACHPOINTCALCTYPEREF>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<TEACHPOINTCALCTYPEREF>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<TEACHPOINTCALCTYPEREF>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<TEACHPOINTCALCTYPEREF>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<TEACHPOINTCALCTYPEREF>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class TEACHPOINTCALCTYPESpecifications
    {
		public static Expression<Func<TEACHPOINTCALCTYPE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<TEACHPOINTCALCTYPE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<TEACHPOINTCALCTYPE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<TEACHPOINTCALCTYPE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<TEACHPOINTCALCTYPE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<TEACHPOINTCALCTYPE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<TEACHPOINTCALCTYPE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class SCORESETTINGSCORETYPESpecifications
    {
		public static Expression<Func<SCORESETTINGSCORETYPE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<SCORESETTINGSCORETYPE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<SCORESETTINGSCORETYPE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<SCORESETTINGSCORETYPE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<SCORESETTINGSCORETYPE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<SCORESETTINGSCORETYPE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<SCORESETTINGSCORETYPE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class SCORESETTINGJOBSpecifications
    {
		public static Expression<Func<SCORESETTINGJOB, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<SCORESETTINGJOB>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<SCORESETTINGJOB>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<SCORESETTINGJOB>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<SCORESETTINGJOB>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<SCORESETTINGJOB>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<SCORESETTINGJOB>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class SCORESETTINGDETAILSpecifications
    {
		public static Expression<Func<SCORESETTINGDETAIL, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<SCORESETTINGDETAIL>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<SCORESETTINGDETAIL>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<SCORESETTINGDETAIL>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<SCORESETTINGDETAIL>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<SCORESETTINGDETAIL>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<SCORESETTINGDETAIL>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class SCORESETTINGSpecifications
    {
		public static Expression<Func<SCORESETTING, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<SCORESETTING>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<SCORESETTING>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<SCORESETTING>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<SCORESETTING>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<SCORESETTING>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<SCORESETTING>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class SCOREINSTANCEDETAILSpecifications
    {
		public static Expression<Func<SCOREINSTANCEDETAIL, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<SCOREINSTANCEDETAIL>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<SCOREINSTANCEDETAIL>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<SCOREINSTANCEDETAIL>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<SCOREINSTANCEDETAIL>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<SCOREINSTANCEDETAIL>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<SCOREINSTANCEDETAIL>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class SCOREINSTANCESpecifications
    {
		public static Expression<Func<SCOREINSTANCE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<SCOREINSTANCE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<SCOREINSTANCE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<SCOREINSTANCE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<SCOREINSTANCE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<SCOREINSTANCE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<SCOREINSTANCE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class SCHEDULERLOGSpecifications
    {
		public static Expression<Func<SCHEDULERLOG, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<SCHEDULERLOG>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<SCHEDULERLOG>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<SCHEDULERLOG>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<SCHEDULERLOG>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<SCHEDULERLOG>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<SCHEDULERLOG>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class R分級資料Specifications
    {
		public static Expression<Func<R分級資料, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<R分級資料>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<R分級資料>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<R分級資料>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<R分級資料>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<R分級資料>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<R分級資料>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class REPORTDATATEMPSpecifications
    {
		public static Expression<Func<REPORTDATATEMP, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<REPORTDATATEMP>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<REPORTDATATEMP>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<REPORTDATATEMP>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<REPORTDATATEMP>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<REPORTDATATEMP>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<REPORTDATATEMP>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class RECORDTEMPLATESpecifications
    {
		public static Expression<Func<RECORDTEMPLATE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<RECORDTEMPLATE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<RECORDTEMPLATE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<RECORDTEMPLATE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<RECORDTEMPLATE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<RECORDTEMPLATE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<RECORDTEMPLATE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class RECORDINSVIEWERSpecifications
    {
		public static Expression<Func<RECORDINSVIEWER, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<RECORDINSVIEWER>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<RECORDINSVIEWER>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<RECORDINSVIEWER>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<RECORDINSVIEWER>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<RECORDINSVIEWER>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<RECORDINSVIEWER>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class RECORDINSTANCEREJECTLOGSpecifications
    {
		public static Expression<Func<RECORDINSTANCEREJECTLOG, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<RECORDINSTANCEREJECTLOG>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<RECORDINSTANCEREJECTLOG>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<RECORDINSTANCEREJECTLOG>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<RECORDINSTANCEREJECTLOG>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<RECORDINSTANCEREJECTLOG>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<RECORDINSTANCEREJECTLOG>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class RECORDINSTANCESpecifications
    {
		public static Expression<Func<RECORDINSTANCE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<RECORDINSTANCE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<RECORDINSTANCE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<RECORDINSTANCE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<RECORDINSTANCE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<RECORDINSTANCE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<RECORDINSTANCE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class RECORDINSSIGNINSpecifications
    {
		public static Expression<Func<RECORDINSSIGNIN, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<RECORDINSSIGNIN>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<RECORDINSSIGNIN>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<RECORDINSSIGNIN>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<RECORDINSSIGNIN>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<RECORDINSSIGNIN>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<RECORDINSSIGNIN>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class RECORDINSREADERSpecifications
    {
		public static Expression<Func<RECORDINSREADER, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<RECORDINSREADER>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<RECORDINSREADER>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<RECORDINSREADER>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<RECORDINSREADER>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<RECORDINSREADER>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<RECORDINSREADER>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class RECORDINSDETSpecifications
    {
		public static Expression<Func<RECORDINSDET, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<RECORDINSDET>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<RECORDINSDET>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<RECORDINSDET>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<RECORDINSDET>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<RECORDINSDET>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<RECORDINSDET>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class RECORDEDUACTREFSpecifications
    {
		public static Expression<Func<RECORDEDUACTREF, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<RECORDEDUACTREF>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<RECORDEDUACTREF>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<RECORDEDUACTREF>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<RECORDEDUACTREF>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<RECORDEDUACTREF>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<RECORDEDUACTREF>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class PSNOPDSpecifications
    {
		public static Expression<Func<PSNOPD, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<PSNOPD>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<PSNOPD>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<PSNOPD>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<PSNOPD>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<PSNOPD>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<PSNOPD>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class PASSPORTSTUDENTAPPLICATIONITEMFAILLOGSpecifications
    {
		public static Expression<Func<PASSPORTSTUDENTAPPLICATIONITEMFAILLOG, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<PASSPORTSTUDENTAPPLICATIONITEMFAILLOG>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<PASSPORTSTUDENTAPPLICATIONITEMFAILLOG>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<PASSPORTSTUDENTAPPLICATIONITEMFAILLOG>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<PASSPORTSTUDENTAPPLICATIONITEMFAILLOG>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<PASSPORTSTUDENTAPPLICATIONITEMFAILLOG>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<PASSPORTSTUDENTAPPLICATIONITEMFAILLOG>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class PASSPORTSTUDENTAPPLICATIONITEM_BK2Specifications
    {
		public static Expression<Func<PASSPORTSTUDENTAPPLICATIONITEM_BK2, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<PASSPORTSTUDENTAPPLICATIONITEM_BK2>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<PASSPORTSTUDENTAPPLICATIONITEM_BK2>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<PASSPORTSTUDENTAPPLICATIONITEM_BK2>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<PASSPORTSTUDENTAPPLICATIONITEM_BK2>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<PASSPORTSTUDENTAPPLICATIONITEM_BK2>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<PASSPORTSTUDENTAPPLICATIONITEM_BK2>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class PASSPORTSTUDENTAPPLICATIONITEM_BKSpecifications
    {
		public static Expression<Func<PASSPORTSTUDENTAPPLICATIONITEM_BK, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<PASSPORTSTUDENTAPPLICATIONITEM_BK>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<PASSPORTSTUDENTAPPLICATIONITEM_BK>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<PASSPORTSTUDENTAPPLICATIONITEM_BK>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<PASSPORTSTUDENTAPPLICATIONITEM_BK>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<PASSPORTSTUDENTAPPLICATIONITEM_BK>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<PASSPORTSTUDENTAPPLICATIONITEM_BK>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class PASSPORTSTUDENTAPPLICATIONITEMSpecifications
    {
		public static Expression<Func<PASSPORTSTUDENTAPPLICATIONITEM, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<PASSPORTSTUDENTAPPLICATIONITEM>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<PASSPORTSTUDENTAPPLICATIONITEM>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<PASSPORTSTUDENTAPPLICATIONITEM>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<PASSPORTSTUDENTAPPLICATIONITEM>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<PASSPORTSTUDENTAPPLICATIONITEM>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<PASSPORTSTUDENTAPPLICATIONITEM>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class PASSPORTSPECIALLISTSpecifications
    {
		public static Expression<Func<PASSPORTSPECIALLIST, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<PASSPORTSPECIALLIST>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<PASSPORTSPECIALLIST>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<PASSPORTSPECIALLIST>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<PASSPORTSPECIALLIST>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<PASSPORTSPECIALLIST>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<PASSPORTSPECIALLIST>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class PASSPORTJOBTITLEITEM_BKSpecifications
    {
		public static Expression<Func<PASSPORTJOBTITLEITEM_BK, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<PASSPORTJOBTITLEITEM_BK>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<PASSPORTJOBTITLEITEM_BK>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<PASSPORTJOBTITLEITEM_BK>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<PASSPORTJOBTITLEITEM_BK>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<PASSPORTJOBTITLEITEM_BK>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<PASSPORTJOBTITLEITEM_BK>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class PASSPORTJOBTITLEITEMSpecifications
    {
		public static Expression<Func<PASSPORTJOBTITLEITEM, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<PASSPORTJOBTITLEITEM>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<PASSPORTJOBTITLEITEM>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<PASSPORTJOBTITLEITEM>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<PASSPORTJOBTITLEITEM>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<PASSPORTJOBTITLEITEM>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<PASSPORTJOBTITLEITEM>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class PASSPORTJOBFINALMANSpecifications
    {
		public static Expression<Func<PASSPORTJOBFINALMAN, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<PASSPORTJOBFINALMAN>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<PASSPORTJOBFINALMAN>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<PASSPORTJOBFINALMAN>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<PASSPORTJOBFINALMAN>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<PASSPORTJOBFINALMAN>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<PASSPORTJOBFINALMAN>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class PASSPORTDOCGRADESpecifications
    {
		public static Expression<Func<PASSPORTDOCGRADE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<PASSPORTDOCGRADE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<PASSPORTDOCGRADE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<PASSPORTDOCGRADE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<PASSPORTDOCGRADE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<PASSPORTDOCGRADE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<PASSPORTDOCGRADE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class PASSPORTCHECKITEMSpecifications
    {
		public static Expression<Func<PASSPORTCHECKITEM, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<PASSPORTCHECKITEM>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<PASSPORTCHECKITEM>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<PASSPORTCHECKITEM>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<PASSPORTCHECKITEM>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<PASSPORTCHECKITEM>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<PASSPORTCHECKITEM>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class OSCECERTSpecifications
    {
		public static Expression<Func<OSCECERT, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<OSCECERT>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<OSCECERT>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<OSCECERT>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<OSCECERT>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<OSCECERT>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<OSCECERT>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class OSCEBLOCKTIMESpecifications
    {
		public static Expression<Func<OSCEBLOCKTIME, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<OSCEBLOCKTIME>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<OSCEBLOCKTIME>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<OSCEBLOCKTIME>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<OSCEBLOCKTIME>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<OSCEBLOCKTIME>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<OSCEBLOCKTIME>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class NURSELISTSpecifications
    {
		public static Expression<Func<NURSELIST, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<NURSELIST>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<NURSELIST>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<NURSELIST>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<NURSELIST>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<NURSELIST>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<NURSELIST>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class NNOTEITEMSpecifications
    {
		public static Expression<Func<NNOTEITEM, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<NNOTEITEM>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<NNOTEITEM>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<NNOTEITEM>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<NNOTEITEM>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<NNOTEITEM>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<NNOTEITEM>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class NNOTESpecifications
    {
		public static Expression<Func<NNOTE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<NNOTE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<NNOTE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<NNOTE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<NNOTE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<NNOTE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<NNOTE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class NEWSVIEWTARGETSpecifications
    {
		public static Expression<Func<NEWSVIEWTARGET, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<NEWSVIEWTARGET>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<NEWSVIEWTARGET>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<NEWSVIEWTARGET>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<NEWSVIEWTARGET>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<NEWSVIEWTARGET>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<NEWSVIEWTARGET>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class NEWS_ATTACHMENTSpecifications
    {
		public static Expression<Func<NEWS_ATTACHMENT, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<NEWS_ATTACHMENT>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<NEWS_ATTACHMENT>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<NEWS_ATTACHMENT>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<NEWS_ATTACHMENT>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<NEWS_ATTACHMENT>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<NEWS_ATTACHMENT>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class NEWSSpecifications
    {
		public static Expression<Func<NEWS, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<NEWS>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<NEWS>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<NEWS>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<NEWS>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<NEWS>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<NEWS>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class MYLISTDETSpecifications
    {
		public static Expression<Func<MYLISTDET, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<MYLISTDET>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<MYLISTDET>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<MYLISTDET>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<MYLISTDET>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<MYLISTDET>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<MYLISTDET>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class MYLISTSpecifications
    {
		public static Expression<Func<MYLIST, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<MYLIST>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<MYLIST>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<MYLIST>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<MYLIST>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<MYLIST>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<MYLIST>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class MONTHLYTEACHPOINTCALCDATUMSpecifications
    {
		public static Expression<Func<MONTHLYTEACHPOINTCALCDATUM, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<MONTHLYTEACHPOINTCALCDATUM>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<MONTHLYTEACHPOINTCALCDATUM>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<MONTHLYTEACHPOINTCALCDATUM>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<MONTHLYTEACHPOINTCALCDATUM>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<MONTHLYTEACHPOINTCALCDATUM>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<MONTHLYTEACHPOINTCALCDATUM>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class MESSAGEBOARDSpecifications
    {
		public static Expression<Func<MESSAGEBOARD, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<MESSAGEBOARD>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<MESSAGEBOARD>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<MESSAGEBOARD>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<MESSAGEBOARD>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<MESSAGEBOARD>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<MESSAGEBOARD>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class MEMBER_BKSpecifications
    {
		public static Expression<Func<MEMBER_BK, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<MEMBER_BK>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<MEMBER_BK>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<MEMBER_BK>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<MEMBER_BK>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<MEMBER_BK>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<MEMBER_BK>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class MEMBERSpecifications
    {
		public static Expression<Func<MEMBER, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<MEMBER>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<MEMBER>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<MEMBER>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<MEMBER>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<MEMBER>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<MEMBER>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class MEDICALVOTELISTSpecifications
    {
		public static Expression<Func<MEDICALVOTELIST, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<MEDICALVOTELIST>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<MEDICALVOTELIST>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<MEDICALVOTELIST>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<MEDICALVOTELIST>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<MEDICALVOTELIST>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<MEDICALVOTELIST>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class MEDICALTEACHPOINTSpecifications
    {
		public static Expression<Func<MEDICALTEACHPOINT, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<MEDICALTEACHPOINT>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<MEDICALTEACHPOINT>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<MEDICALTEACHPOINT>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<MEDICALTEACHPOINT>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<MEDICALTEACHPOINT>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<MEDICALTEACHPOINT>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class LOGINLOGSpecifications
    {
		public static Expression<Func<LOGINLOG, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<LOGINLOG>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<LOGINLOG>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<LOGINLOG>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<LOGINLOG>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<LOGINLOG>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<LOGINLOG>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class JOBFORMSETTINGSpecifications
    {
		public static Expression<Func<JOBFORMSETTING, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<JOBFORMSETTING>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<JOBFORMSETTING>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<JOBFORMSETTING>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<JOBFORMSETTING>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<JOBFORMSETTING>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<JOBFORMSETTING>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class IMPORTTEMPSpecifications
    {
		public static Expression<Func<IMPORTTEMP, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<IMPORTTEMP>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<IMPORTTEMP>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<IMPORTTEMP>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<IMPORTTEMP>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<IMPORTTEMP>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<IMPORTTEMP>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class IKASA_UPLOADFILESpecifications
    {
		public static Expression<Func<IKASA_UPLOADFILE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<IKASA_UPLOADFILE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<IKASA_UPLOADFILE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<IKASA_UPLOADFILE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<IKASA_UPLOADFILE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<IKASA_UPLOADFILE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<IKASA_UPLOADFILE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class IKASA_OSCEEXAMSTAGESpecifications
    {
		public static Expression<Func<IKASA_OSCEEXAMSTAGE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<IKASA_OSCEEXAMSTAGE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<IKASA_OSCEEXAMSTAGE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<IKASA_OSCEEXAMSTAGE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<IKASA_OSCEEXAMSTAGE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<IKASA_OSCEEXAMSTAGE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<IKASA_OSCEEXAMSTAGE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class IKASA_OSCEEXAMSCORESpecifications
    {
		public static Expression<Func<IKASA_OSCEEXAMSCORE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<IKASA_OSCEEXAMSCORE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<IKASA_OSCEEXAMSCORE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<IKASA_OSCEEXAMSCORE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<IKASA_OSCEEXAMSCORE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<IKASA_OSCEEXAMSCORE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<IKASA_OSCEEXAMSCORE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class IKASA_OSCEEXAMSpecifications
    {
		public static Expression<Func<IKASA_OSCEEXAM, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<IKASA_OSCEEXAM>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<IKASA_OSCEEXAM>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<IKASA_OSCEEXAM>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<IKASA_OSCEEXAM>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<IKASA_OSCEEXAM>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<IKASA_OSCEEXAM>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class IKASA_MENUREFSpecifications
    {
		public static Expression<Func<IKASA_MENUREF, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<IKASA_MENUREF>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<IKASA_MENUREF>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<IKASA_MENUREF>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<IKASA_MENUREF>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<IKASA_MENUREF>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<IKASA_MENUREF>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class IKASA_MENUPARAMSpecifications
    {
		public static Expression<Func<IKASA_MENUPARAM, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<IKASA_MENUPARAM>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<IKASA_MENUPARAM>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<IKASA_MENUPARAM>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<IKASA_MENUPARAM>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<IKASA_MENUPARAM>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<IKASA_MENUPARAM>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class IKASA_MENUSpecifications
    {
		public static Expression<Func<IKASA_MENU, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<IKASA_MENU>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<IKASA_MENU>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<IKASA_MENU>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<IKASA_MENU>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<IKASA_MENU>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<IKASA_MENU>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class IKASA_IPDDATACOUNTSpecifications
    {
		public static Expression<Func<IKASA_IPDDATACOUNT, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<IKASA_IPDDATACOUNT>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<IKASA_IPDDATACOUNT>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<IKASA_IPDDATACOUNT>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<IKASA_IPDDATACOUNT>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<IKASA_IPDDATACOUNT>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<IKASA_IPDDATACOUNT>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class IKASA_ERCASE_EVALDETSpecifications
    {
		public static Expression<Func<IKASA_ERCASE_EVALDET, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<IKASA_ERCASE_EVALDET>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<IKASA_ERCASE_EVALDET>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<IKASA_ERCASE_EVALDET>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<IKASA_ERCASE_EVALDET>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<IKASA_ERCASE_EVALDET>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<IKASA_ERCASE_EVALDET>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class IKASA_ERCASE_EVALSpecifications
    {
		public static Expression<Func<IKASA_ERCASE_EVAL, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<IKASA_ERCASE_EVAL>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<IKASA_ERCASE_EVAL>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<IKASA_ERCASE_EVAL>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<IKASA_ERCASE_EVAL>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<IKASA_ERCASE_EVAL>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<IKASA_ERCASE_EVAL>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class IKASA_ERCASESpecifications
    {
		public static Expression<Func<IKASA_ERCASE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<IKASA_ERCASE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<IKASA_ERCASE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<IKASA_ERCASE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<IKASA_ERCASE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<IKASA_ERCASE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<IKASA_ERCASE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class IKASA_ACTUPLOADFILESpecifications
    {
		public static Expression<Func<IKASA_ACTUPLOADFILE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<IKASA_ACTUPLOADFILE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<IKASA_ACTUPLOADFILE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<IKASA_ACTUPLOADFILE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<IKASA_ACTUPLOADFILE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<IKASA_ACTUPLOADFILE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<IKASA_ACTUPLOADFILE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class HEALTEACHTIMERATESpecifications
    {
		public static Expression<Func<HEALTEACHTIMERATE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<HEALTEACHTIMERATE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<HEALTEACHTIMERATE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<HEALTEACHTIMERATE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<HEALTEACHTIMERATE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<HEALTEACHTIMERATE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<HEALTEACHTIMERATE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class HEALTEACHTIMESpecifications
    {
		public static Expression<Func<HEALTEACHTIME, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<HEALTEACHTIME>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<HEALTEACHTIME>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<HEALTEACHTIME>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<HEALTEACHTIME>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<HEALTEACHTIME>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<HEALTEACHTIME>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class GOODVSDATADESpecifications
    {
		public static Expression<Func<GOODVSDATADE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<GOODVSDATADE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<GOODVSDATADE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<GOODVSDATADE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<GOODVSDATADE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<GOODVSDATADE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<GOODVSDATADE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class GOODVSDATUMSpecifications
    {
		public static Expression<Func<GOODVSDATUM, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<GOODVSDATUM>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<GOODVSDATUM>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<GOODVSDATUM>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<GOODVSDATUM>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<GOODVSDATUM>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<GOODVSDATUM>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORMCATEGORYREFSpecifications
    {
		public static Expression<Func<FORMCATEGORYREF, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORMCATEGORYREF>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORMCATEGORYREF>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORMCATEGORYREF>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORMCATEGORYREF>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORMCATEGORYREF>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORMCATEGORYREF>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORMCATEGORYSpecifications
    {
		public static Expression<Func<FORMCATEGORY, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORMCATEGORY>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORMCATEGORY>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORMCATEGORY>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORMCATEGORY>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORMCATEGORY>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORMCATEGORY>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_TODO_LISTSpecifications
    {
		public static Expression<Func<FORM_TODO_LIST, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_TODO_LIST>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_TODO_LIST>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_TODO_LIST>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_TODO_LIST>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_TODO_LIST>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_TODO_LIST>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_TEMPLATES_BKSpecifications
    {
		public static Expression<Func<FORM_TEMPLATES_BK, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_TEMPLATES_BK>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_TEMPLATES_BK>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_TEMPLATES_BK>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_TEMPLATES_BK>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_TEMPLATES_BK>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_TEMPLATES_BK>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_TEMPLATESpecifications
    {
		public static Expression<Func<FORM_TEMPLATE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_TEMPLATE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_TEMPLATE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_TEMPLATE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_TEMPLATE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_TEMPLATE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_TEMPLATE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_TEMPLATE_SUBMIT_SQLSpecifications
    {
		public static Expression<Func<FORM_TEMPLATE_SUBMIT_SQL, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_TEMPLATE_SUBMIT_SQL>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_TEMPLATE_SUBMIT_SQL>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_TEMPLATE_SUBMIT_SQL>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_TEMPLATE_SUBMIT_SQL>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_TEMPLATE_SUBMIT_SQL>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_TEMPLATE_SUBMIT_SQL>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_TEMPLATE_SQLSpecifications
    {
		public static Expression<Func<FORM_TEMPLATE_SQL, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_TEMPLATE_SQL>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_TEMPLATE_SQL>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_TEMPLATE_SQL>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_TEMPLATE_SQL>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_TEMPLATE_SQL>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_TEMPLATE_SQL>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_TEMPLATE_SINGLESpecifications
    {
		public static Expression<Func<FORM_TEMPLATE_SINGLE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_TEMPLATE_SINGLE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_TEMPLATE_SINGLE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_TEMPLATE_SINGLE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_TEMPLATE_SINGLE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_TEMPLATE_SINGLE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_TEMPLATE_SINGLE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_TEMPLATE_SCRIPTSpecifications
    {
		public static Expression<Func<FORM_TEMPLATE_SCRIPT, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_TEMPLATE_SCRIPT>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_TEMPLATE_SCRIPT>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_TEMPLATE_SCRIPT>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_TEMPLATE_SCRIPT>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_TEMPLATE_SCRIPT>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_TEMPLATE_SCRIPT>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_TEMPLATE_PERMISSIONSpecifications
    {
		public static Expression<Func<FORM_TEMPLATE_PERMISSION, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_TEMPLATE_PERMISSION>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_TEMPLATE_PERMISSION>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_TEMPLATE_PERMISSION>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_TEMPLATE_PERMISSION>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_TEMPLATE_PERMISSION>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_TEMPLATE_PERMISSION>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_TEMPLATE_NECESSARYSpecifications
    {
		public static Expression<Func<FORM_TEMPLATE_NECESSARY, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_TEMPLATE_NECESSARY>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_TEMPLATE_NECESSARY>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_TEMPLATE_NECESSARY>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_TEMPLATE_NECESSARY>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_TEMPLATE_NECESSARY>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_TEMPLATE_NECESSARY>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_TEMPLATE_LIBRARY_OPTIONSpecifications
    {
		public static Expression<Func<FORM_TEMPLATE_LIBRARY_OPTION, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_TEMPLATE_LIBRARY_OPTION>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_TEMPLATE_LIBRARY_OPTION>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_TEMPLATE_LIBRARY_OPTION>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_TEMPLATE_LIBRARY_OPTION>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_TEMPLATE_LIBRARY_OPTION>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_TEMPLATE_LIBRARY_OPTION>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_TEMPLATE_LIBRARYSpecifications
    {
		public static Expression<Func<FORM_TEMPLATE_LIBRARY, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_TEMPLATE_LIBRARY>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_TEMPLATE_LIBRARY>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_TEMPLATE_LIBRARY>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_TEMPLATE_LIBRARY>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_TEMPLATE_LIBRARY>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_TEMPLATE_LIBRARY>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_TEMPLATE_IMAGESpecifications
    {
		public static Expression<Func<FORM_TEMPLATE_IMAGE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_TEMPLATE_IMAGE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_TEMPLATE_IMAGE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_TEMPLATE_IMAGE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_TEMPLATE_IMAGE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_TEMPLATE_IMAGE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_TEMPLATE_IMAGE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_TEMPLATE_GROUPS_BKSpecifications
    {
		public static Expression<Func<FORM_TEMPLATE_GROUPS_BK, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_TEMPLATE_GROUPS_BK>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_TEMPLATE_GROUPS_BK>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_TEMPLATE_GROUPS_BK>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_TEMPLATE_GROUPS_BK>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_TEMPLATE_GROUPS_BK>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_TEMPLATE_GROUPS_BK>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_TEMPLATE_GROUPSpecifications
    {
		public static Expression<Func<FORM_TEMPLATE_GROUP, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_TEMPLATE_GROUP>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_TEMPLATE_GROUP>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_TEMPLATE_GROUP>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_TEMPLATE_GROUP>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_TEMPLATE_GROUP>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_TEMPLATE_GROUP>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_TEMPLATE_EXPRESSIONSpecifications
    {
		public static Expression<Func<FORM_TEMPLATE_EXPRESSION, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_TEMPLATE_EXPRESSION>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_TEMPLATE_EXPRESSION>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_TEMPLATE_EXPRESSION>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_TEMPLATE_EXPRESSION>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_TEMPLATE_EXPRESSION>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_TEMPLATE_EXPRESSION>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_TEMPLATE_ELEMENTS_BKSpecifications
    {
		public static Expression<Func<FORM_TEMPLATE_ELEMENTS_BK, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_TEMPLATE_ELEMENTS_BK>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_TEMPLATE_ELEMENTS_BK>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_TEMPLATE_ELEMENTS_BK>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_TEMPLATE_ELEMENTS_BK>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_TEMPLATE_ELEMENTS_BK>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_TEMPLATE_ELEMENTS_BK>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_TEMPLATE_ELEMENTSpecifications
    {
		public static Expression<Func<FORM_TEMPLATE_ELEMENT, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_TEMPLATE_ELEMENT>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_TEMPLATE_ELEMENT>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_TEMPLATE_ELEMENT>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_TEMPLATE_ELEMENT>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_TEMPLATE_ELEMENT>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_TEMPLATE_ELEMENT>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_TEMPLATE_ELEMENT_READONLYSpecifications
    {
		public static Expression<Func<FORM_TEMPLATE_ELEMENT_READONLY, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_TEMPLATE_ELEMENT_READONLY>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_TEMPLATE_ELEMENT_READONLY>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_TEMPLATE_ELEMENT_READONLY>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_TEMPLATE_ELEMENT_READONLY>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_TEMPLATE_ELEMENT_READONLY>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_TEMPLATE_ELEMENT_READONLY>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_TEMPLATE_DYNAMIC_ELEMENTSpecifications
    {
		public static Expression<Func<FORM_TEMPLATE_DYNAMIC_ELEMENT, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_TEMPLATE_DYNAMIC_ELEMENT>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_TEMPLATE_DYNAMIC_ELEMENT>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_TEMPLATE_DYNAMIC_ELEMENT>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_TEMPLATE_DYNAMIC_ELEMENT>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_TEMPLATE_DYNAMIC_ELEMENT>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_TEMPLATE_DYNAMIC_ELEMENT>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_OPTION_TYPESpecifications
    {
		public static Expression<Func<FORM_OPTION_TYPE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_OPTION_TYPE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_OPTION_TYPE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_OPTION_TYPE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_OPTION_TYPE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_OPTION_TYPE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_OPTION_TYPE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_INSTANCES_DELLOGSpecifications
    {
		public static Expression<Func<FORM_INSTANCES_DELLOG, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_INSTANCES_DELLOG>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_INSTANCES_DELLOG>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_INSTANCES_DELLOG>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_INSTANCES_DELLOG>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_INSTANCES_DELLOG>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_INSTANCES_DELLOG>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_INSTANCES_BKSpecifications
    {
		public static Expression<Func<FORM_INSTANCES_BK, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_INSTANCES_BK>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_INSTANCES_BK>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_INSTANCES_BK>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_INSTANCES_BK>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_INSTANCES_BK>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_INSTANCES_BK>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_INSTANCESpecifications
    {
		public static Expression<Func<FORM_INSTANCE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_INSTANCE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_INSTANCE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_INSTANCE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_INSTANCE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_INSTANCE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_INSTANCE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_INSTANCE_TRANSLOGSpecifications
    {
		public static Expression<Func<FORM_INSTANCE_TRANSLOG, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_INSTANCE_TRANSLOG>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_INSTANCE_TRANSLOG>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_INSTANCE_TRANSLOG>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_INSTANCE_TRANSLOG>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_INSTANCE_TRANSLOG>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_INSTANCE_TRANSLOG>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_INSTANCE_TARGETS_DELLOGSpecifications
    {
		public static Expression<Func<FORM_INSTANCE_TARGETS_DELLOG, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_INSTANCE_TARGETS_DELLOG>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_INSTANCE_TARGETS_DELLOG>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_INSTANCE_TARGETS_DELLOG>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_INSTANCE_TARGETS_DELLOG>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_INSTANCE_TARGETS_DELLOG>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_INSTANCE_TARGETS_DELLOG>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_INSTANCE_TARGETS_BKSpecifications
    {
		public static Expression<Func<FORM_INSTANCE_TARGETS_BK, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_INSTANCE_TARGETS_BK>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_INSTANCE_TARGETS_BK>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_INSTANCE_TARGETS_BK>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_INSTANCE_TARGETS_BK>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_INSTANCE_TARGETS_BK>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_INSTANCE_TARGETS_BK>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_INSTANCE_TARGETSpecifications
    {
		public static Expression<Func<FORM_INSTANCE_TARGET, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_INSTANCE_TARGET>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_INSTANCE_TARGET>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_INSTANCE_TARGET>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_INSTANCE_TARGET>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_INSTANCE_TARGET>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_INSTANCE_TARGET>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_INSTANCE_RETURN_LOGSpecifications
    {
		public static Expression<Func<FORM_INSTANCE_RETURN_LOG, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_INSTANCE_RETURN_LOG>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_INSTANCE_RETURN_LOG>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_INSTANCE_RETURN_LOG>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_INSTANCE_RETURN_LOG>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_INSTANCE_RETURN_LOG>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_INSTANCE_RETURN_LOG>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_INSTANCE_EXPRESSIONS_BKSpecifications
    {
		public static Expression<Func<FORM_INSTANCE_EXPRESSIONS_BK, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_INSTANCE_EXPRESSIONS_BK>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_INSTANCE_EXPRESSIONS_BK>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_INSTANCE_EXPRESSIONS_BK>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_INSTANCE_EXPRESSIONS_BK>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_INSTANCE_EXPRESSIONS_BK>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_INSTANCE_EXPRESSIONS_BK>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_INSTANCE_EXPRESSIONSpecifications
    {
		public static Expression<Func<FORM_INSTANCE_EXPRESSION, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_INSTANCE_EXPRESSION>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_INSTANCE_EXPRESSION>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_INSTANCE_EXPRESSION>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_INSTANCE_EXPRESSION>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_INSTANCE_EXPRESSION>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_INSTANCE_EXPRESSION>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_INSTANCE_ELEMENTS_BKSpecifications
    {
		public static Expression<Func<FORM_INSTANCE_ELEMENTS_BK, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_INSTANCE_ELEMENTS_BK>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_INSTANCE_ELEMENTS_BK>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_INSTANCE_ELEMENTS_BK>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_INSTANCE_ELEMENTS_BK>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_INSTANCE_ELEMENTS_BK>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_INSTANCE_ELEMENTS_BK>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_INSTANCE_ELEMENTSpecifications
    {
		public static Expression<Func<FORM_INSTANCE_ELEMENT, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_INSTANCE_ELEMENT>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_INSTANCE_ELEMENT>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_INSTANCE_ELEMENT>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_INSTANCE_ELEMENT>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_INSTANCE_ELEMENT>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_INSTANCE_ELEMENT>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_INSTANCE_BLOCKSpecifications
    {
		public static Expression<Func<FORM_INSTANCE_BLOCK, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_INSTANCE_BLOCK>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_INSTANCE_BLOCK>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_INSTANCE_BLOCK>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_INSTANCE_BLOCK>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_INSTANCE_BLOCK>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_INSTANCE_BLOCK>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FORM_INSTANCE_ATTACHMENTSpecifications
    {
		public static Expression<Func<FORM_INSTANCE_ATTACHMENT, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FORM_INSTANCE_ATTACHMENT>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FORM_INSTANCE_ATTACHMENT>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FORM_INSTANCE_ATTACHMENT>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FORM_INSTANCE_ATTACHMENT>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FORM_INSTANCE_ATTACHMENT>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FORM_INSTANCE_ATTACHMENT>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class FIXMEMBERDATUMSpecifications
    {
		public static Expression<Func<FIXMEMBERDATUM, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<FIXMEMBERDATUM>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<FIXMEMBERDATUM>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<FIXMEMBERDATUM>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<FIXMEMBERDATUM>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<FIXMEMBERDATUM>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<FIXMEMBERDATUM>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class ELEARNINGITEMSpecifications
    {
		public static Expression<Func<ELEARNINGITEM, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<ELEARNINGITEM>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<ELEARNINGITEM>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<ELEARNINGITEM>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<ELEARNINGITEM>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<ELEARNINGITEM>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<ELEARNINGITEM>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class ELEARNINGEMPITEMLOGSpecifications
    {
		public static Expression<Func<ELEARNINGEMPITEMLOG, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<ELEARNINGEMPITEMLOG>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<ELEARNINGEMPITEMLOG>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<ELEARNINGEMPITEMLOG>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<ELEARNINGEMPITEMLOG>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<ELEARNINGEMPITEMLOG>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<ELEARNINGEMPITEMLOG>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class ELEARNINGEMPITEMSpecifications
    {
		public static Expression<Func<ELEARNINGEMPITEM, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<ELEARNINGEMPITEM>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<ELEARNINGEMPITEM>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<ELEARNINGEMPITEM>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<ELEARNINGEMPITEM>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<ELEARNINGEMPITEM>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<ELEARNINGEMPITEM>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class ELEARNINGCLASSSpecifications
    {
		public static Expression<Func<ELEARNINGCLASS, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<ELEARNINGCLASS>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<ELEARNINGCLASS>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<ELEARNINGCLASS>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<ELEARNINGCLASS>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<ELEARNINGCLASS>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<ELEARNINGCLASS>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class ELEARNINGBOOKINGSpecifications
    {
		public static Expression<Func<ELEARNINGBOOKING, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<ELEARNINGBOOKING>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<ELEARNINGBOOKING>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<ELEARNINGBOOKING>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<ELEARNINGBOOKING>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<ELEARNINGBOOKING>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<ELEARNINGBOOKING>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUTERMFORMREQTEMPLATEDETSpecifications
    {
		public static Expression<Func<EDUTERMFORMREQTEMPLATEDET, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUTERMFORMREQTEMPLATEDET>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUTERMFORMREQTEMPLATEDET>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUTERMFORMREQTEMPLATEDET>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUTERMFORMREQTEMPLATEDET>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUTERMFORMREQTEMPLATEDET>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUTERMFORMREQTEMPLATEDET>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUTERMFORMREQTEMPLATESpecifications
    {
		public static Expression<Func<EDUTERMFORMREQTEMPLATE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUTERMFORMREQTEMPLATE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUTERMFORMREQTEMPLATE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUTERMFORMREQTEMPLATE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUTERMFORMREQTEMPLATE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUTERMFORMREQTEMPLATE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUTERMFORMREQTEMPLATE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUTERMFORMREQSpecifications
    {
		public static Expression<Func<EDUTERMFORMREQ, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUTERMFORMREQ>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUTERMFORMREQ>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUTERMFORMREQ>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUTERMFORMREQ>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUTERMFORMREQ>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUTERMFORMREQ>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUTERMFORMINSTANCESpecifications
    {
		public static Expression<Func<EDUTERMFORMINSTANCE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUTERMFORMINSTANCE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUTERMFORMINSTANCE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUTERMFORMINSTANCE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUTERMFORMINSTANCE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUTERMFORMINSTANCE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUTERMFORMINSTANCE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUTERMSpecifications
    {
		public static Expression<Func<EDUTERM, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUTERM>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUTERM>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUTERM>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUTERM>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUTERM>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUTERM>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUTEAMRUNDOWNSpecifications
    {
		public static Expression<Func<EDUTEAMRUNDOWN, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUTEAMRUNDOWN>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUTEAMRUNDOWN>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUTEAMRUNDOWN>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUTEAMRUNDOWN>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUTEAMRUNDOWN>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUTEAMRUNDOWN>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUTEAMMEMBERRUNDOWN_TRANSLOGSpecifications
    {
		public static Expression<Func<EDUTEAMMEMBERRUNDOWN_TRANSLOG, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUTEAMMEMBERRUNDOWN_TRANSLOG>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUTEAMMEMBERRUNDOWN_TRANSLOG>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUTEAMMEMBERRUNDOWN_TRANSLOG>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUTEAMMEMBERRUNDOWN_TRANSLOG>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUTEAMMEMBERRUNDOWN_TRANSLOG>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUTEAMMEMBERRUNDOWN_TRANSLOG>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUTEAMMEMBERRUNDOWNSpecifications
    {
		public static Expression<Func<EDUTEAMMEMBERRUNDOWN, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUTEAMMEMBERRUNDOWN>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUTEAMMEMBERRUNDOWN>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUTEAMMEMBERRUNDOWN>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUTEAMMEMBERRUNDOWN>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUTEAMMEMBERRUNDOWN>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUTEAMMEMBERRUNDOWN>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUTEAMMEMBERSpecifications
    {
		public static Expression<Func<EDUTEAMMEMBER, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUTEAMMEMBER>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUTEAMMEMBER>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUTEAMMEMBER>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUTEAMMEMBER>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUTEAMMEMBER>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUTEAMMEMBER>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUTEAMSpecifications
    {
		public static Expression<Func<EDUTEAM, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUTEAM>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUTEAM>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUTEAM>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUTEAM>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUTEAM>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUTEAM>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUTEACHERTYPESpecifications
    {
		public static Expression<Func<EDUTEACHERTYPE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUTEACHERTYPE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUTEACHERTYPE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUTEACHERTYPE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUTEACHERTYPE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUTEACHERTYPE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUTEACHERTYPE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUSTOPACTSCHEDULESpecifications
    {
		public static Expression<Func<EDUSTOPACTSCHEDULE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUSTOPACTSCHEDULE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUSTOPACTSCHEDULE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUSTOPACTSCHEDULE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUSTOPACTSCHEDULE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUSTOPACTSCHEDULE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUSTOPACTSCHEDULE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUSTOPACTATTACHMENTSpecifications
    {
		public static Expression<Func<EDUSTOPACTATTACHMENT, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUSTOPACTATTACHMENT>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUSTOPACTATTACHMENT>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUSTOPACTATTACHMENT>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUSTOPACTATTACHMENT>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUSTOPACTATTACHMENT>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUSTOPACTATTACHMENT>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUSTOPSpecifications
    {
		public static Expression<Func<EDUSTOP, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUSTOP>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUSTOP>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUSTOP>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUSTOP>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUSTOP>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUSTOP>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUSETTINGSpecifications
    {
		public static Expression<Func<EDUSETTING, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUSETTING>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUSETTING>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUSETTING>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUSETTING>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUSETTING>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUSETTING>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUSENTENCESpecifications
    {
		public static Expression<Func<EDUSENTENCE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUSENTENCE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUSENTENCE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUSENTENCE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUSENTENCE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUSENTENCE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUSENTENCE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUSCORESpecifications
    {
		public static Expression<Func<EDUSCORE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUSCORE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUSCORE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUSCORE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUSCORE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUSCORE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUSCORE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUREFTEACHERSpecifications
    {
		public static Expression<Func<EDUREFTEACHER, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUREFTEACHER>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUREFTEACHER>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUREFTEACHER>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUREFTEACHER>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUREFTEACHER>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUREFTEACHER>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUQUESTIONSpecifications
    {
		public static Expression<Func<EDUQUESTION, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUQUESTION>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUQUESTION>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUQUESTION>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUQUESTION>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUQUESTION>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUQUESTION>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUPASSPORTTEMPLATETARGETSpecifications
    {
		public static Expression<Func<EDUPASSPORTTEMPLATETARGET, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUPASSPORTTEMPLATETARGET>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUPASSPORTTEMPLATETARGET>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUPASSPORTTEMPLATETARGET>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUPASSPORTTEMPLATETARGET>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUPASSPORTTEMPLATETARGET>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUPASSPORTTEMPLATETARGET>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUPASSPORTTEMPLATEITEMSpecifications
    {
		public static Expression<Func<EDUPASSPORTTEMPLATEITEM, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUPASSPORTTEMPLATEITEM>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUPASSPORTTEMPLATEITEM>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUPASSPORTTEMPLATEITEM>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUPASSPORTTEMPLATEITEM>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUPASSPORTTEMPLATEITEM>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUPASSPORTTEMPLATEITEM>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUPASSPORTTEMPLATESpecifications
    {
		public static Expression<Func<EDUPASSPORTTEMPLATE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUPASSPORTTEMPLATE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUPASSPORTTEMPLATE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUPASSPORTTEMPLATE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUPASSPORTTEMPLATE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUPASSPORTTEMPLATE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUPASSPORTTEMPLATE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUPASSPORTPREFSpecifications
    {
		public static Expression<Func<EDUPASSPORTPREF, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUPASSPORTPREF>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUPASSPORTPREF>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUPASSPORTPREF>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUPASSPORTPREF>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUPASSPORTPREF>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUPASSPORTPREF>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUPASSPORTITEMTARGETSpecifications
    {
		public static Expression<Func<EDUPASSPORTITEMTARGET, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUPASSPORTITEMTARGET>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUPASSPORTITEMTARGET>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUPASSPORTITEMTARGET>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUPASSPORTITEMTARGET>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUPASSPORTITEMTARGET>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUPASSPORTITEMTARGET>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUPASSPORTITEMDETSpecifications
    {
		public static Expression<Func<EDUPASSPORTITEMDET, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUPASSPORTITEMDET>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUPASSPORTITEMDET>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUPASSPORTITEMDET>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUPASSPORTITEMDET>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUPASSPORTITEMDET>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUPASSPORTITEMDET>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUPASSPORTITEMSpecifications
    {
		public static Expression<Func<EDUPASSPORTITEM, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUPASSPORTITEM>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUPASSPORTITEM>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUPASSPORTITEM>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUPASSPORTITEM>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUPASSPORTITEM>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUPASSPORTITEM>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUPASSPORTINSTANCESpecifications
    {
		public static Expression<Func<EDUPASSPORTINSTANCE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUPASSPORTINSTANCE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUPASSPORTINSTANCE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUPASSPORTINSTANCE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUPASSPORTINSTANCE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUPASSPORTINSTANCE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUPASSPORTINSTANCE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUPASSPORTINSITEMREJECTHISpecifications
    {
		public static Expression<Func<EDUPASSPORTINSITEMREJECTHI, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUPASSPORTINSITEMREJECTHI>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUPASSPORTINSITEMREJECTHI>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUPASSPORTINSITEMREJECTHI>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUPASSPORTINSITEMREJECTHI>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUPASSPORTINSITEMREJECTHI>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUPASSPORTINSITEMREJECTHI>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUPASSPORTINSITEMREFSpecifications
    {
		public static Expression<Func<EDUPASSPORTINSITEMREF, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUPASSPORTINSITEMREF>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUPASSPORTINSITEMREF>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUPASSPORTINSITEMREF>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUPASSPORTINSITEMREF>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUPASSPORTINSITEMREF>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUPASSPORTINSITEMREF>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUPASSPORTINSITEMDETSpecifications
    {
		public static Expression<Func<EDUPASSPORTINSITEMDET, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUPASSPORTINSITEMDET>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUPASSPORTINSITEMDET>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUPASSPORTINSITEMDET>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUPASSPORTINSITEMDET>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUPASSPORTINSITEMDET>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUPASSPORTINSITEMDET>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUPASSPORTINSITEMSpecifications
    {
		public static Expression<Func<EDUPASSPORTINSITEM, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUPASSPORTINSITEM>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUPASSPORTINSITEM>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUPASSPORTINSITEM>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUPASSPORTINSITEM>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUPASSPORTINSITEM>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUPASSPORTINSITEM>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUNOTETEMPLATESpecifications
    {
		public static Expression<Func<EDUNOTETEMPLATE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUNOTETEMPLATE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUNOTETEMPLATE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUNOTETEMPLATE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUNOTETEMPLATE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUNOTETEMPLATE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUNOTETEMPLATE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUNOTELISTSpecifications
    {
		public static Expression<Func<EDUNOTELIST, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUNOTELIST>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUNOTELIST>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUNOTELIST>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUNOTELIST>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUNOTELIST>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUNOTELIST>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUNOTEITEMSpecifications
    {
		public static Expression<Func<EDUNOTEITEM, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUNOTEITEM>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUNOTEITEM>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUNOTEITEM>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUNOTEITEM>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUNOTEITEM>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUNOTEITEM>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUNOTESpecifications
    {
		public static Expression<Func<EDUNOTE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUNOTE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUNOTE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUNOTE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUNOTE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUNOTE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUNOTE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUNOTALERTSETTINGSpecifications
    {
		public static Expression<Func<EDUNOTALERTSETTING, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUNOTALERTSETTING>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUNOTALERTSETTING>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUNOTALERTSETTING>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUNOTALERTSETTING>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUNOTALERTSETTING>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUNOTALERTSETTING>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUMENUSpecifications
    {
		public static Expression<Func<EDUMENU, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUMENU>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUMENU>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUMENU>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUMENU>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUMENU>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUMENU>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUFORMTEMPLATETARGETSpecifications
    {
		public static Expression<Func<EDUFORMTEMPLATETARGET, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUFORMTEMPLATETARGET>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUFORMTEMPLATETARGET>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUFORMTEMPLATETARGET>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUFORMTEMPLATETARGET>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUFORMTEMPLATETARGET>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUFORMTEMPLATETARGET>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUFORMTEMPLATELISTSpecifications
    {
		public static Expression<Func<EDUFORMTEMPLATELIST, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUFORMTEMPLATELIST>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUFORMTEMPLATELIST>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUFORMTEMPLATELIST>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUFORMTEMPLATELIST>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUFORMTEMPLATELIST>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUFORMTEMPLATELIST>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUFORMSTASTICPERMISSIONSpecifications
    {
		public static Expression<Func<EDUFORMSTASTICPERMISSION, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUFORMSTASTICPERMISSION>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUFORMSTASTICPERMISSION>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUFORMSTASTICPERMISSION>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUFORMSTASTICPERMISSION>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUFORMSTASTICPERMISSION>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUFORMSTASTICPERMISSION>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUACTVIEWTARGETSpecifications
    {
		public static Expression<Func<EDUACTVIEWTARGET, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUACTVIEWTARGET>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUACTVIEWTARGET>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUACTVIEWTARGET>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUACTVIEWTARGET>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUACTVIEWTARGET>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUACTVIEWTARGET>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUACTTYPEROLEREFSpecifications
    {
		public static Expression<Func<EDUACTTYPEROLEREF, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUACTTYPEROLEREF>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUACTTYPEROLEREF>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUACTTYPEROLEREF>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUACTTYPEROLEREF>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUACTTYPEROLEREF>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUACTTYPEROLEREF>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUACTTYPEREFSpecifications
    {
		public static Expression<Func<EDUACTTYPEREF, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUACTTYPEREF>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUACTTYPEREF>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUACTTYPEREF>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUACTTYPEREF>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUACTTYPEREF>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUACTTYPEREF>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUACTTYPEGROUPINGSpecifications
    {
		public static Expression<Func<EDUACTTYPEGROUPING, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUACTTYPEGROUPING>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUACTTYPEGROUPING>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUACTTYPEGROUPING>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUACTTYPEGROUPING>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUACTTYPEGROUPING>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUACTTYPEGROUPING>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUACTTYPE_BKSpecifications
    {
		public static Expression<Func<EDUACTTYPE_BK, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUACTTYPE_BK>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUACTTYPE_BK>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUACTTYPE_BK>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUACTTYPE_BK>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUACTTYPE_BK>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUACTTYPE_BK>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUACTTYPESpecifications
    {
		public static Expression<Func<EDUACTTYPE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUACTTYPE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUACTTYPE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUACTTYPE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUACTTYPE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUACTTYPE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUACTTYPE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUACTTOPICSpecifications
    {
		public static Expression<Func<EDUACTTOPIC, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUACTTOPIC>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUACTTOPIC>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUACTTOPIC>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUACTTOPIC>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUACTTOPIC>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUACTTOPIC>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUACTTARGETSpecifications
    {
		public static Expression<Func<EDUACTTARGET, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUACTTARGET>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUACTTARGET>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUACTTARGET>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUACTTARGET>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUACTTARGET>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUACTTARGET>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class EDUACTBOOKINGSpecifications
    {
		public static Expression<Func<EDUACTBOOKING, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<EDUACTBOOKING>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<EDUACTBOOKING>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<EDUACTBOOKING>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<EDUACTBOOKING>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<EDUACTBOOKING>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<EDUACTBOOKING>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class DOCTORPOINTTYPESpecifications
    {
		public static Expression<Func<DOCTORPOINTTYPE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<DOCTORPOINTTYPE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<DOCTORPOINTTYPE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<DOCTORPOINTTYPE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<DOCTORPOINTTYPE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<DOCTORPOINTTYPE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<DOCTORPOINTTYPE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class DOCTORPOINTCALTYPESpecifications
    {
		public static Expression<Func<DOCTORPOINTCALTYPE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<DOCTORPOINTCALTYPE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<DOCTORPOINTCALTYPE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<DOCTORPOINTCALTYPE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<DOCTORPOINTCALTYPE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<DOCTORPOINTCALTYPE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<DOCTORPOINTCALTYPE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class DOCTORPOINTSpecifications
    {
		public static Expression<Func<DOCTORPOINT, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<DOCTORPOINT>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<DOCTORPOINT>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<DOCTORPOINT>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<DOCTORPOINT>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<DOCTORPOINT>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<DOCTORPOINT>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class DEPSECTEMPSpecifications
    {
		public static Expression<Func<DEPSECTEMP, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<DEPSECTEMP>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<DEPSECTEMP>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<DEPSECTEMP>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<DEPSECTEMP>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<DEPSECTEMP>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<DEPSECTEMP>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class DEPSECDATUMSpecifications
    {
		public static Expression<Func<DEPSECDATUM, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<DEPSECDATUM>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<DEPSECDATUM>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<DEPSECDATUM>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<DEPSECDATUM>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<DEPSECDATUM>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<DEPSECDATUM>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class CLERKIPDNOTEDATUMSpecifications
    {
		public static Expression<Func<CLERKIPDNOTEDATUM, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<CLERKIPDNOTEDATUM>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<CLERKIPDNOTEDATUM>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<CLERKIPDNOTEDATUM>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<CLERKIPDNOTEDATUM>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<CLERKIPDNOTEDATUM>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<CLERKIPDNOTEDATUM>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class CICBOOKSpecifications
    {
		public static Expression<Func<CICBOOK, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<CICBOOK>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<CICBOOK>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<CICBOOK>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<CICBOOK>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<CICBOOK>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<CICBOOK>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class AUTOEDUFORMTEMPLATETARGETSpecifications
    {
		public static Expression<Func<AUTOEDUFORMTEMPLATETARGET, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<AUTOEDUFORMTEMPLATETARGET>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<AUTOEDUFORMTEMPLATETARGET>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<AUTOEDUFORMTEMPLATETARGET>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<AUTOEDUFORMTEMPLATETARGET>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<AUTOEDUFORMTEMPLATETARGET>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<AUTOEDUFORMTEMPLATETARGET>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class AUTOEDUFORMTEMPLATESIGNERSpecifications
    {
		public static Expression<Func<AUTOEDUFORMTEMPLATESIGNER, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<AUTOEDUFORMTEMPLATESIGNER>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<AUTOEDUFORMTEMPLATESIGNER>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<AUTOEDUFORMTEMPLATESIGNER>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<AUTOEDUFORMTEMPLATESIGNER>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<AUTOEDUFORMTEMPLATESIGNER>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<AUTOEDUFORMTEMPLATESIGNER>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class AUTOEDUFORMTEMPLATELISTSpecifications
    {
		public static Expression<Func<AUTOEDUFORMTEMPLATELIST, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<AUTOEDUFORMTEMPLATELIST>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<AUTOEDUFORMTEMPLATELIST>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<AUTOEDUFORMTEMPLATELIST>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<AUTOEDUFORMTEMPLATELIST>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<AUTOEDUFORMTEMPLATELIST>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<AUTOEDUFORMTEMPLATELIST>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class AUTOEDUFORMTEMPLATEEXCEPTSpecifications
    {
		public static Expression<Func<AUTOEDUFORMTEMPLATEEXCEPT, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<AUTOEDUFORMTEMPLATEEXCEPT>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<AUTOEDUFORMTEMPLATEEXCEPT>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<AUTOEDUFORMTEMPLATEEXCEPT>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<AUTOEDUFORMTEMPLATEEXCEPT>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<AUTOEDUFORMTEMPLATEEXCEPT>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<AUTOEDUFORMTEMPLATEEXCEPT>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class AUTHROLESpecifications
    {
		public static Expression<Func<AUTHROLE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<AUTHROLE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<AUTHROLE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<AUTHROLE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<AUTHROLE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<AUTHROLE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<AUTHROLE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class AUTHMENUSpecifications
    {
		public static Expression<Func<AUTHMENU, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<AUTHMENU>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<AUTHMENU>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<AUTHMENU>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<AUTHMENU>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<AUTHMENU>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<AUTHMENU>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class ACTTYPETREE_TEMPSpecifications
    {
		public static Expression<Func<ACTTYPETREE_TEMP, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<ACTTYPETREE_TEMP>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<ACTTYPETREE_TEMP>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<ACTTYPETREE_TEMP>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<ACTTYPETREE_TEMP>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<ACTTYPETREE_TEMP>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<ACTTYPETREE_TEMP>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class ACCOUNTSpecifications
    {
		public static Expression<Func<ACCOUNT, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<ACCOUNT>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<ACCOUNT>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<ACCOUNT>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<ACCOUNT>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<ACCOUNT>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<ACCOUNT>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class ACCOUNTROLEIMPORTSpecifications
    {
		public static Expression<Func<ACCOUNTROLEIMPORT, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<ACCOUNTROLEIMPORT>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<ACCOUNTROLEIMPORT>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<ACCOUNTROLEIMPORT>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<ACCOUNTROLEIMPORT>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<ACCOUNTROLEIMPORT>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<ACCOUNTROLEIMPORT>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}



	public static partial class ACCOUNTROLESpecifications
    {
		public static Expression<Func<ACCOUNTROLE, bool>> QuerySpecification1(string name, string status, string hospital1, string hospital2, string hospital3)
		{
			var spec = Specification<ACCOUNTROLE>.Eval(c => false);

			if (!string.IsNullOrEmpty(name))
			{
				//var spec1 = Specification<ACCOUNTROLE>.Eval(c => c.Name == name);
				//spec = spec && spec1;
			}

			if (!string.IsNullOrEmpty(status))
			{
				//var spec2 = Specification<ACCOUNTROLE>.Eval(c => c.Status == status);
				//spec = spec && spec2;
			}

			if (!string.IsNullOrEmpty(hospital1))
			{
				//var spec3 = Specification<ACCOUNTROLE>.Eval(c => c.Hospital == hospital1);
				//spec = spec || spec3;
			}

			if (!string.IsNullOrEmpty(hospital2))
			{
				//var spec4 = Specification<ACCOUNTROLE>.Eval(c => c.Hospital == hospital2);
				//spec = spec || spec4;
			}

			if (!string.IsNullOrEmpty(hospital3))
			{
				//var spec5 = Specification<ACCOUNTROLE>.Eval(c => c.Hospital == hospital3);
				//spec = spec || spec5;
			}
			return spec.GetExpression();
		}
	}


}
#pragma warning restore 1591

