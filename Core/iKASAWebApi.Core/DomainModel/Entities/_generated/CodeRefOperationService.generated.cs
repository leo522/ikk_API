

#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Linq;
using System.Linq.Expressions;
using System.Collections;
using System.Collections.Generic;
using AppFramework.ApplicationLayer.DTO;
using KMUH.FunctionLibrary.ApplicationLayer.Services;
using KMUH.iKASAWebApi.ApplicationLayer.DTO;
using KMUH.iKASAWebApi.DomainModel.Entities;

namespace KMUH.iKASAWebApi.ApplicationLayer.Services
{
	public interface ICodeRefOperationService : IDisposable
	{
		IiKASAWebApiContextUnitOfWork UnitOfWork { get; set; }
		string ConnectionStringName { get; set; }


		IEnumerable<CodeRefDto> ReadCodeReferenceItems(string commandText);
		IEnumerable<CodeRefDto> ReadCodeReferenceItems(string commandText, params System.Data.Common.DbParameter[] parameters);
		IEnumerable<CodeRefDto> ReadCodeReferenceItems(string commandText, System.Data.CommandType commandType, params System.Data.Common.DbParameter[] parameters);
	}


	public partial class CodeRefOperationService : ICodeRefOperationService
	{
		private IiKASAWebApiContextUnitOfWork unitOfWork;
		public IiKASAWebApiContextUnitOfWork UnitOfWork
		{
			get
			{
				if (this.unitOfWork == null)
				{
					string connectionStringName = string.IsNullOrEmpty(this.ConnectionStringName) ? "iKASAWebApi" : this.ConnectionStringName;
					if (System.Configuration.ConfigurationManager.ConnectionStrings[connectionStringName] == null)
						throw new ArgumentException(string.Format("Can't find the '{0}' connectionString name in app/web.config", connectionStringName));
					var connectionString = System.Configuration.ConfigurationManager.ConnectionStrings[connectionStringName].ConnectionString;
					this.unitOfWork = new iKASAWebApiContext(connectionString);
				}
				return this.unitOfWork;
			}
			set
			{
				this.unitOfWork = value;
			}
		}


		public string ConnectionStringName { get; set; }


		public CodeRefOperationService()
		{
			DBConnStrConfig.AddConnStrToConfig("", "iKASAWebApi");
		}


		public CodeRefOperationService(String DBName)
		{
			DBConnStrConfig.AddConnStrToConfig(DBName, "iKASAWebApi");
			 ConnectionStringName = DBConnStrConfig.GetConfigConnStrName(DBName, "iKASAWebApi");
		}


		public Telerik.OpenAccess.OpenAccessContext DbContext { get { return this.UnitOfWork as Telerik.OpenAccess.OpenAccessContext; } }


		#region IDisposable Members


		public void Dispose()
		{
			//dispose all resources
			IDisposable context = this.unitOfWork as IDisposable;
			if (context != null)
			{
				context.Dispose();
			}
		}
		#endregion IDisposable Members


		public IEnumerable<CodeRefDto> ReadCodeReferenceItems(string commandText)
		{
			return this.DbContext.ExecuteQuery<CodeRefDto>(commandText);
		}


		public IEnumerable<CodeRefDto> ReadCodeReferenceItems(string commandText, params System.Data.Common.DbParameter[] parameters)
		{
			return this.DbContext.ExecuteQuery<CodeRefDto>(commandText, parameters);
		}


		public IEnumerable<CodeRefDto> ReadCodeReferenceItems(string commandText, System.Data.CommandType commandType, params System.Data.Common.DbParameter[] parameters)
		{
			return this.DbContext.ExecuteQuery<CodeRefDto>(commandText, commandType, parameters);
		}


	}
}
#pragma warning restore 1591

