


#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using AppFramework.DomainModel.Entities.Converter;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using Telerik.OpenAccess.Metadata.Relational;

namespace KMUH.iKASAWebApi.DomainModel.Entities
{
	public partial class iKASAWebApiContext
	{
		
        protected override string CacheKey
        {
            get
            {
                return this.ConnectionStringName;
            }
        }

        public string ConnectionStringName { get; set; }
		
        public void DbmsApplicationInfo_SetModule(string in_ModuleName)
        {
	    if (System.Configuration.ConfigurationManager.ConnectionStrings[in_ModuleName].ProviderName == "Oracle.DataAccess.Client")
            {
              List<OAParameter> sp_param = new List<OAParameter>();
              sp_param.Add(new OAParameter("module_name", in_ModuleName));
              sp_param.Add(new OAParameter("action_name", in_ModuleName));
            int tmp = this.ExecuteNonQuery("SYS.DBMS_APPLICATION_INFO.SET_MODULE", CommandType.StoredProcedure, sp_param.ToArray());
            }
        }
		
        public DateTime GetSysDate()
        {
            const string sqlQuery = "select sysdate from dual";
            return this.ExecuteScalar<DateTime>(sqlQuery);
        }
		
        private int PR_GETSERIALNO(string aSERIALTYPE, string aSERIALOWNER, ref string aSERIALNO)
        {
            OAParameter parameterASERIALTYPE = new OAParameter();
            parameterASERIALTYPE.ParameterName = "ASERIALTYPE";
            if(aSERIALTYPE != null)
            {
                parameterASERIALTYPE.Value = aSERIALTYPE;
            }
            else
            {
                parameterASERIALTYPE.DbType = DbType.String;
                parameterASERIALTYPE.Value = DBNull.Value;
            }

            OAParameter parameterASERIALOWNER = new OAParameter();
            parameterASERIALOWNER.ParameterName = "ASERIALOWNER";
            if(aSERIALOWNER != null)
            {
                parameterASERIALOWNER.Value = aSERIALOWNER;
            }
            else
            {
                parameterASERIALOWNER.DbType = DbType.String;
                parameterASERIALOWNER.Value = DBNull.Value;
            }

            OAParameter parameterASERIALNO = new OAParameter();
            parameterASERIALNO.ParameterName = "ASERIALNO";
            parameterASERIALNO.Size = 50;
            parameterASERIALNO.Direction = ParameterDirection.Output;
            if(aSERIALNO != null)
            {
                parameterASERIALNO.Value = aSERIALNO;
            }
            else
            {
                parameterASERIALNO.DbType = DbType.String;
                parameterASERIALNO.Value = DBNull.Value;
            }
            int queryResult = this.ExecuteNonQuery("ERD.PR_GETSERIALNO", CommandType.StoredProcedure, parameterASERIALTYPE, parameterASERIALOWNER, parameterASERIALNO);
            aSERIALNO = parameterASERIALNO.Value == DBNull.Value ? default(string) : (string)parameterASERIALNO.Value;
            return queryResult;
        }

        public string GenerateNewIdentity(string IdentityOwner)
        {
            string serialNo = "";
            int queryResult = PR_GETSERIALNO("ID", IdentityOwner, ref serialNo);
            return serialNo;
        }
	}
}
#pragma warning restore 1591

